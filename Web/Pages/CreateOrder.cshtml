@page
@using Web.Repositories
@model Web.Pages.CreateOrderModel
@{
    var sqlConnector = new SqlConnector();
    var furnitureRepository = new FurnitureRepository(sqlConnector);
    var furnitures = furnitureRepository.GetAll().Result;

    var sqlConnector2 = new SqlConnector();
    var customerRepository = new CustomerRepository(sqlConnector2);
    var customers = customerRepository.GetAll().Result;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Order Page</title>

    <!-- Link to Stylesheet -->
    <link rel="stylesheet" href="CreateOrder.cshtml.css">

</head>
<body>

    <!-- Your HTML content here -->


    <label for="FurnitureName">Furniture Name: </label>
    <input type="text" id="filterName" name="filterName" class="Input-text" placeholder="Furniture Name">
    <p></p>
    <p></p>

    <label for="OrderlinePrice">Price: </label>
    <input type="number" id="price" name="price" class="Input-text" placeholder="Price" min="0">
    <p></p>
    <p></p>

    <label for="OrderOrderDate">Order Date: </label>
    <input type="date" id="orderDate" class="Input-text" name="orderDate">
    <p></p>
    <p></p>

    <label for="Platform">Select a Platform:</label>
    <!-- Dropdown Select -->
    <select id="platform" name="platform">
        <option value="instagram">Instagram</option>
        <option value="facebook">Facebook</option>
        <option value="website">Website</option>
    </select>

    <p></p>
    <p></p>


    <!-- Toggle Options using Radio Buttons -->
    <label for="Toggle-Title-Label">Shipping Type: </label>


    <label class="toggle-label">
        <input type="radio" name="toggle-option" value="plane"> Plane
    </label>

    <label class="toggle-label">
        <input type="radio" name="toggle-option" value="ship"> Ship
    </label>

    <label class="toggle-label">
        <input type="radio" name="toggle-option" value="truck"> Truck
    </label>

    <p></p>
    <p></p>


    <!-- Multi-Select Options using Checkboxes -->
    <label for="Toggle-Title-Label">Something: </label>
    <label class="checkbox-label">
        <input type="checkbox" name="option1" value="option1"> Option 1
    </label>

    <label class="checkbox-label">
        <input type="checkbox" name="option2" value="option2"> Option 2
    </label>

    <label class="checkbox-label">
        <input type="checkbox" name="option3" value="option3"> Option 3
    </label>

    <p></p>
    <p></p>
    <p></p>
    <p></p>


    <!-- Number Input for Furniture Count -->
    <label class="input-label" for="furnitureCount">Furniture Count:</label>
    <input type="number" id="furnitureCount" name="furnitureCount" min="0">

    <!-- Button to Generate Number Input Fields -->
    <button type="button" class="button" onclick="generateNumberInputFields()">Create Furniture Fields</button>

    <!-- Container to Hold Dynamically Generated Input Fields -->
    <div id="inputFieldsContainer"></div>

    <script>
        function generateNumberInputFields() {
            var furnitureCount = document.getElementById("furnitureCount").value;

            // Clear previous input fields
            document.getElementById("inputFieldsContainer").innerHTML = "";

            for (var i = 0; i < furnitureCount; i++) {
                var inputField = document.createElement("input");
                inputField.type = "number";
                inputField.className = "input-number"
                inputField.name = "ordelineID" + (i + 1);
                inputField.placeholder = "OrdelineID " + (i + 1);

                var label = document.createElement("label");
                label.appendChild(document.createTextNode("OrdelineID " + (i + 1) + ": "));
                label.appendChild(inputField);

                document.getElementById("inputFieldsContainer").appendChild(label);
            }
        }
    </script>

    <p></p>

	<button type="button" class="button">Create New Order</button>




    
        <h2>Furniture Information</h2>
    <table>
        <thead>
            <tr>
                <th>SKU</th>
                <th>Furniture Type</th>
                <th>Tree Material</th>
                <th>Name</th>
                <th>Base Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var furniture in furnitures)
            {
                <tr>
                    <td>@furniture.SKU</td>
                    <td>@furniture.FurnitureType</td>
                    <td>@furniture.TreeMaterial</td>
                    <td>@furniture.Name</td>
                    <td>@furniture.BasePrice</td>
                </tr>
            }
        </tbody>
    </table>



	
    <h2>Customer Information</h2>
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Country</th>
                <th>State</th>
                <th>Phone Number</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.ID</td>
                    <td>@customer.Name</td>
                    <td>@customer.Country</td>
                    <td>@customer.State</td>
                    <td>@customer.PhoneNumber</td>
                </tr>
            }
        </tbody>
    </table>
    




</body>
</html>
